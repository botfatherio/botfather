#ifndef CEF_KEY_EVENT_ADAPTER_BASE_H
#define CEF_KEY_EVENT_ADAPTER_BASE_H

#include <QKeyEvent>

#include "include/cef_base.h"

class CefKeyEventAdapter : public CefKeyEvent {
   public:
    explicit CefKeyEventAdapter(const QKeyEvent *event);
    CefKeyEventAdapter(const QString &bf_keycode,
                       const Qt::KeyboardModifiers &qt_keyboard_modifiers);

    // Properties inherited from CefKeyEvent:

    // The type of keyboard event.
    // cef_key_event_type_t type;

    // Bit flags describing any pressed modifier keys. See
    // cef_event_flags_t for values.
    // uint32 modifiers;

    // The Windows key code for the key event. This value is used by the DOM
    // specification. Sometimes it comes directly from the event (i.e. on
    // Windows) and sometimes it's determined using a mapping function. See
    // WebCore/platform/chromium/KeyboardCodes.h for the list of values.
    // int windows_key_code;

    // The actual key code genenerated by the platform.
    // int native_key_code;

    // Indicates whether the event is considered a "system key" event (see
    // http://msdn.microsoft.com/en-us/library/ms646286(VS.85).aspx for
    // details). This value will always be false on non-Windows platforms. int
    // is_system_key;

    // The character generated by the keystroke.
    // char16 character;

    // Same as |character| but unmodified by any concurrently-held modifiers
    // (except shift). This is useful for working out shortcut keys.
    // char16 unmodified_character;

    // True if the focus is currently on an editable field on the page. This is
    // useful for determining if standard key events should be intercepted.
    // int focus_on_editable_field;
};

#endif  // CEF_KEY_EVENT_ADAPTER_BASE_H
