#ifndef BFP__DESKTOP__LINUXINPUTFAKER_H
#define BFP__DESKTOP__LINUXINPUTFAKER_H

#include <linux/uinput.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>

/**
 * @brief The UinputFaker class
 * 
 * The UinputFaker combinds Xlib and uinput functionality to send keyboard and mouse input events
 * accepted by all kinds of windows. Events generated by xlib are sometimes ignored by programs
 * as those are marked as fake input. Uinput on the other hand is for hardware manifactures. We
 * register a custom universal input device and use it to avoid Xlibs restrictions.
 * 
 * List of uninput keycodes: https://github.com/torvalds/linux/blob/master/include/uapi/linux/input-event-codes.h
 */
class UinputFaker
{
public:
	UinputFaker(char* display_name=nullptr);
	~UinputFaker();
	
	void hold(int event_code);
	void release(int event_code);
	void press(int event_code);	
	void moveCursor(int delta_x, int delta_y);
	void warpCursor(int x, int y);
	
private:
	Display *display;
	Window root_window;
	struct uinput_setup usetup;
	int fd;
	void emitEvent(int type, int code, int val);
};

#endif // BFP__DESKTOP__LINUXINPUTFAKER_H